colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
transorg$tag <- formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg$sp <- for (i in 1:length(transorg)){transorg[[i]]<-cbind(transorg[[i]],fileName[i])}
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
transorg$tag <- formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg$sp <- for (i in 1:length(transorg)){transorg[[i]]<-rbind(transorg[[i]],fileName[i])}
transorg <- rbindlist(mget(ls(pattern=".rw1")), idcol=TRUE)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
transorg$tag <- formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
?ls
fileName <- file.path(dirs, pattern="acru_drop")
fileName
fileName <- file.path(dirs, pattern="acru_drop.rwl")
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
fileName <- file.path(dirs)
testFileName <- file.path(dirs, gsub(".rwl", ".csv", dirs))
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
testFileName <- file.path(dirs, gsub(".rwl", ".csv", dirs))
file <- !gsub("[[:alpha:]]", "", fileName)
file <- gsub("[[:alnum:]]", "", fileName)
file <- gsub("_[[:alpha:]]+$", "", fileName)
file <- gsub("_+$", "", fileName)
file <- gsub("_[:alpha:].$", "", fileName)
file <- gsub("_[[:alpha:]].+$", "", fileName)
file
file <- gsub("_[[:alpha:]].+$", "", fileName) & gsub(".rwl", "", fileName)
file <- gsub(".rwl", "", file)
file
file <- duplicated(file)
file <- gsub("_[[:alpha:]].+$", "", fileName)
file <- gsub(".rwl", "", file)
file <- unique(file)
file
testFileName <- file.path(dirs, gsub(".rwl", ".csv", fileName))
testFileName <- file.path(dirs, paste0(dirs, ".csv"))
testFileName <- file.path(dirs, gsub("+$", ".csv", dirs))
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
fileName <- file.path(dirs)
file <- gsub("_[[:alpha:]].+$", "", fileName)
file <- gsub(".rwl", "", file)
file <- unique(file)
testFileName <- file.path(dirs, gsub("+$", ".csv", dirs))
testFileName <- file.path(dirs)
testFileName <- file.path(dirs.csv)
testFileName <- file.path(fileName, gsub(".rwl", ".csv", fileName))
testFileName <- file.path(dirs, gsub(".rwl", ".csv", fileName))
?replace
testFileName <- file.path(dirs, replace(dirs, ".rwl", ".csv"))
testFileName <- file.path(dirs, replace(dirs, ".csv", ".rwl"))
testFileName <- file.path(dirs)
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
testFileName <- gsub(".+$", ".csv", fileName)
testFileName <- file.path(dirs,gsub(".+$", ".csv", fileName))
testFileName <- file.path(dirs)
testFileName <- gsub(".+$", ".csv", testFileName)
testFileName <- file.path(dirs)
testFileName <- gsub("[.]+$", ".csv", testFileName)
testFileName <- gsub("[.]+$", "[.]csv", testFileName)
testFileName <- gsub("[[.]]+$", "[[.]]csv", testFileName)
testFileName <- file.path(dirs,gsub("rwl", "csv", testFileName))
testFileName <- file.path(fileName,gsub("rwl", "csv", testFileName))
file <- strsplit(fileName)
file <- strsplit(fileNamem, "\\.")
file <- strsplit(fileName, "\\.")
testFileName <- file(gsub("rwl", "csv", testFileName))
View(file)
testFileName <- file(gsub("rwl", "csv", file))
file <- gsub("rwl", "csv", file)
fileName <- file.path(dirs)
file <- strsplit(fileName, "\\.")
testFileName <- c(file(+".csv"))
oldNames <- list.files(fileName)
oldNames <- list.files(dirs)
oldNames <- fileName
newnames <- paste(sep="",oldNames,".csv")
testFileName <- file.rename(oldNames, paste0(oldNames,".csv"))
library(tools)
files <- file_path_sans_ext(fileName)
testFileName <- "$files.csv"
?rename
testFileName <- paste0(files, ".csv")
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
library(tools)
fileName <- file.path(dirs)
files <- file_path_sans_ext(fileName)
testFileName <- paste0(files, ".csv")
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_[[:alpha:]].rwl", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_[[:alnum:]].rwl", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
sp <- gsub("_[[:alnum:]]", "", files)
sp <- gsub("_[[:alpha:]]", "", files)
sp <- gsub("_[:alpha:]", "", files)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
library(tools)
fileName <- file.path(dirs)
files <- file_path_sans_ext(fileName)
sp <- gsub("_[[:alpha:]]", "", files)
sp
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
library(tools)
fileName <- file.path(dirs)
files <- file_path_sans_ext(fileName)
sp <- gsub("_[[:alpha:]]", "", files)
sp <- gsub("\\_[[:alpha:]]", "", files)
sp <- gsub("_.*", "", files)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
library(tools)
fileName <- file.path(dirs)
files <- file_path_sans_ext(fileName)
testFileName <- paste0(files, ".csv")
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_.*", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies")
library(tools)
fileName <- file.path(dirs)
files <- file_path_sans_ext(fileName)
testFileName <- paste0(files, ".csv")
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_.*", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/current_chronologies", pattern=".rwl")
library(tools)
fileName <- file.path(dirs)
files <- file_path_sans_ext(fileName)
testFileName <- paste0(files, ".csv")
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_.*", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_.*", "", transorg$sp)
transorg$sp <- gsub(".rwl", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
#currently it stops after fagr, the 10th file. Can't figure out why
for (i in seq(along=fileName)){
library(dplR)
org <- read.rwl(fileName[i], format="tucson")
##transpose the dataframe
library(data.table)
transorg <- transpose(org)
rownames(transorg) <- colnames(org)
colnames(transorg) <- rownames(org)
transorg <- setDT(transorg, keep.rownames = TRUE)[]
setnames(transorg,1,"coreID")
#create column with only numeric tag numbers, then order
transorg$tag <- gsub("[^0-9]", "", transorg$coreID)
transorg$tag <- as.numeric(transorg$tag)
library(dplyr)
transorg <- transorg %>% select(tag,everything())
formatC(transorg$tag, width=6,format="d", flag="0")
#a shorter version of this is sprintf("%06d", transorg$tag)
transorg <- transorg[order(tag),]
transorg <- rbindlist(mget(ls(pattern="transorg")), idcol=TRUE)
setnames(transorg, old=".id", new="sp")
transorg <- transorg %>% select(tag, coreID, sp, everything())
transorg$sp <- gsub("transorg", fileName[i], transorg$sp)
transorg$sp <- gsub("_.*", "", transorg$sp)
transorg$sp <- gsub(".rwl", "", transorg$sp)
write.csv(transorg, file=testFileName[i], row.names=FALSE)
}
##the main csv is located in the Dendrobands repo
dendro_cored_full <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/dendro_cored_full.csv")
dendro_cored_full <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/dendro_cored_full.csv")
View(dendro_cored_full)
library(dplyr)
dendro <- dendro_cored_full %>%
filter(status=="A")
dendro <- dendro[c(1:4,9,11:12,7:8)]
dendro$dbh2018 <- ""
dendro$crown.position <- ""
View(dendro)
dendro$dbh2008 <- round(dendro$dbh2008,2)
dendro$dbh2008 <- round(dendro$dbh2008,1)
source('C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/Rscripts/dendro_cored_full.R', echo=TRUE)
cores <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/climate_sensitivity_cores/data/census_data_for_cored_trees.csv")
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
library(data.table)
setnames(cores, old=c("StemTag"), new=c("stemtag"))
setnames(dendro_trees, old=c("mortality.year"), new=c("status"))
library(tidyr)
dendro_trees$status <- ifelse(dendro_trees$status=="[:digit:]", "A", "D") #this ifelse code is backwards from what it should be but for some reason it's producing the right output.
dendro_trees$status <- replace_na(dendro_trees$status, "A")
dendro_trees$year.cored <-cores$year.cored[match(dendro_trees$tag,cores$tag)]
dendro_merge <- merge(dendro_trees, cores, by=c("tag", "stemtag", "sp", "quadrat", "treeID", "stemID", "status", "gx", "gy","year.cored"), all.x=TRUE, all.y=TRUE)
dendro_all <- dendro_merge[c(1:13,17:22)]
##order the data and remove the crossovers (btwn biannual and cored) that don't have biannual marked already
dendro_all <- dendro_all[order(dendro_all$tag,dendro_all$biannual),]
dendro_all$stemID[is.na(dendro_all$stemID)] <- 0
##WARNING:assign stemID values for 30365 and 131352 (discrepancy with 2013 census). THIS PART SHOULD BE DELETED once the 2018 census data includes these tags with the appropriate info.
dendro_all[91,6]=11
dendro_all[867,6]=12
dendro_all<-dendro_all[!duplicated(dendro_all$stemID),]
##populate with geographic coordinates
latlon <- read.csv("V:/SIGEO/GIS_data/dendroband surveys/Merged_dendroband_utm_lat_lon.csv")
dendro_all$NAD83_X <- latlon$NAD83_X[match(dendro_all$stemID, latlon$stemID)]
dendro_all$NAD83_Y <- latlon$NAD83_Y[match(dendro_all$stemID, latlon$stemID)]
dendro_all$lat <- latlon$lat[match(dendro_all$stemID, latlon$stemID)]
dendro_all$lon <- latlon$lon[match(dendro_all$stemID, latlon$stemID)]
##populate with lx, ly, and status (once ForestGEO 2018 census data is added, use that for base status)
census_2013 <- read.csv("V:/SIGEO/3-RECENSUS 2013/DATA/FINAL DATA to use, to share/scbi.stem2.csv")
dendro_all$lx <- $lx[match(dendro_all$stemID, $stemID)]
dendro_all$ly <- $ly[match(dendro_all$stemID, $stemID)]
##update status from most recent mortality data (this will update only some of the trees, hence why the census data is used first)
mortality_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/SCBI_mortality/raw data/Mortality_Survey_2018.csv")
dendro_all$status <- mortality_2018$new.status[match(dendro_all$tag, mortality_2018$tag)]
missing <- ifelse(is.na(dendro_all$status), dendro_all$tag, "")
missingdf <- dendro_all[!complete.cases(dendro_all$status),]
missingdf <- missingdf[c(1:2)]
setnames(census_2013, old=c("StemTag"), new=c("stemtag"))
dendro_test <- merge(missingdf, census_2013[,c("tag", "stemtag","status")], by=c("tag","stemtag"))
dendro_all <- merge(dendro_all, dendro_test, by="tag", all.x=TRUE)
setnames(dendro_all, old="stemtag.x", new="stemtag")
library(tidyr)
dendro_all <- unite(dendro_all, status, status.x, status.y)
dendro_all$status <- gsub("_NA", "", dendro_all$status)
dendro_all$status <- gsub("NA_", "", dendro_all$status)
dendro_all$status <- gsub("PD", "D", dendro_all$status)
dendro_all$status <- gsub("DS", "D", dendro_all$status)
dendro_all$status <- gsub("DC", "D", dendro_all$status)
dendro_all$status <- gsub("AU", "A", dendro_all$status)
##get rid of NA
dendro_all$biannual[is.na(dendro_all$biannual)] <- 0
dendro_all$intraannual[is.na(dendro_all$intraannual)] <- 0
dendro_all$cored[is.na(dendro_all$cored)] <- 1
census_2008 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem1.csv")
dendro_all$dbh2008 <- census_2008$dbh[match(dendro_all$stemID, census_2008$stemID)]
dendro_all$dbh2013 <- census_2013$dbh[match(dendro_all$stemID, census_2013$stemID)]
dendro_all$dbh2008 <- round(dendro_all$dbh2008,1)
dendro_all$dbh2013 <- round(dendro_all$dbh2013,1)
##re-order
dendro_all <- dendro_all[c(1:6,21:22,11:13,10,7,14:15,8:9,16:19)]
#get rid of final duplicates now that all rows are the same
dendro_all <- dendro_all[!duplicated(dendro_all),]
write.csv(dendro_all, "dendro_cored_full.csv", row.names=FALSE)
getwd()
dendro_cored_full <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/dendro_cored_full.csv")
View(dendro_cored_full)
library(dplyr)
dendro <- dendro_cored_full %>%
filter(status=="A")
dendro <- dendro[c(1:4,9,11:12,7:8)]
dendro$dbh2018 <- ""
dendro$crown.position <- ""
write.csv(dendro, "scbi.crownposition.csv", row.names=FALSE)
getwd()
library(dplyr)
dendro <- dendro_cored_full %>%
filter(status=="A")
dendro <- dendro[c(1:4,9,11:12,7:8)]
dendro$dbh2018 <- ""
dendro$crown.position <- ""
write.csv(dendro, "scbi.crownposition.csv", row.names=FALSE)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_dimensions/tree_crown_position")
library(dplyr)
dendro <- dendro_cored_full %>%
filter(status=="A")
dendro <- dendro[c(1:4,9,11:12,7:8)]
dendro$dbh2018 <- ""
dendro$crown.position <- ""
write.csv(dendro, "scbi.crownposition.csv", row.names=FALSE)
